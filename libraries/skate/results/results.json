{
    "summary": {
        "success": 24,
        "failed": 6,
        "skipped": 0,
        "error": false,
        "disconnected": false,
        "exitCode": 1,
        "score": 91,
        "basicSupport": {
            "total": 16,
            "failed": 0,
            "passed": 16
        },
        "advancedSupport": {
            "total": 14,
            "failed": 6,
            "passed": 8
        }
    },
    "browsers": [
        {
            "browser": {
                "id": "39951879",
                "fullName": "FirefoxHeadless",
                "name": "FirefoxHeadless",
                "state": "DISCONNECTED",
                "lastResult": {
                    "startTime": 1643046679293,
                    "total": 15,
                    "success": 12,
                    "failed": 3,
                    "skipped": 0,
                    "totalTime": 188,
                    "netTime": 45,
                    "error": false,
                    "disconnected": false
                },
                "disconnectsCount": 0,
                "noActivityTimeout": 30000,
                "disconnectDelay": 2000
            },
            "errors": [],
            "results": [
                {
                    "id": "",
                    "description": "can display a Custom Element with no children",
                    "suite": [
                        "basic support",
                        "no children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 14,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1643046679283,
                    "endTime": 1643046679297,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in a Shadow Root",
                    "suite": [
                        "basic support",
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 3,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1643046679303,
                    "endTime": 1643046679306,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in a Shadow Root and pass in Light DOM children",
                    "suite": [
                        "basic support",
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 2,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1643046679310,
                    "endTime": 1643046679313,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in the Shadow DOM and handle hiding and showing the element",
                    "suite": [
                        "basic support",
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 2,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1643046679317,
                    "endTime": 1643046679319,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "will pass boolean data as either an attribute or a property",
                    "suite": [
                        "basic support",
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 1,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1643046679325,
                    "endTime": 1643046679329,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "will pass numeric data as either an attribute or a property",
                    "suite": [
                        "basic support",
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 1,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1643046679337,
                    "endTime": 1643046679339,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "will pass string data as either an attribute or a property",
                    "suite": [
                        "basic support",
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 2,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1643046679346,
                    "endTime": 1643046679349,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "can imperatively listen to a DOM event dispatched by a Custom Element",
                    "suite": [
                        "basic support",
                        "events"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 3,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1643046679356,
                    "endTime": 1643046679360,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "will pass array data as a property",
                    "suite": [
                        "advanced support",
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 1,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1643046679365,
                    "endTime": 1643046679366,
                    "weight": 2
                },
                {
                    "id": "",
                    "description": "will pass object data as a property",
                    "suite": [
                        "advanced support",
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 2,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1643046679375,
                    "endTime": 1643046679377,
                    "weight": 2
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a lowercase DOM event dispatched by a Custom Element",
                    "suite": [
                        "advanced support",
                        "events"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 4,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1643046679384,
                    "endTime": 1643046679388,
                    "weight": 2
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a kebab-case DOM event dispatched by a Custom Element",
                    "suite": [
                        "advanced support",
                        "events"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 2,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1643046679393,
                    "endTime": 1643046679395,
                    "weight": 1
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a camelCase DOM event dispatched by a Custom Element",
                    "suite": [
                        "advanced support",
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 5,
                    "log": [
                        "expected 'false' to deeply equal 'true'",
                        "AssertionError@webpack:///./node_modules/assertion-error/index.js?:74:13",
                        "module.exports/Assertion.prototype.assert@webpack:///./node_modules/chai/lib/chai/assertion.js?:152:13",
                        "assertEql@webpack:///./node_modules/chai/lib/chai/core/assertions.js?:1096:10",
                        "methodWrapper@webpack:///./node_modules/chai/lib/chai/utils/addMethod.js?:57:25",
                        "@webpack:///./src/advanced-tests.js?:105:49",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "AssertionError",
                            "message": "expected 'false' to deeply equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1643046679402,
                    "endTime": 1643046679408,
                    "weight": 1
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a CAPScase DOM event dispatched by a Custom Element",
                    "suite": [
                        "advanced support",
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 2,
                    "log": [
                        "expected 'false' to deeply equal 'true'",
                        "AssertionError@webpack:///./node_modules/assertion-error/index.js?:74:13",
                        "module.exports/Assertion.prototype.assert@webpack:///./node_modules/chai/lib/chai/assertion.js?:152:13",
                        "assertEql@webpack:///./node_modules/chai/lib/chai/core/assertions.js?:1096:10",
                        "methodWrapper@webpack:///./node_modules/chai/lib/chai/utils/addMethod.js?:57:25",
                        "@webpack:///./src/advanced-tests.js?:119:49",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "AssertionError",
                            "message": "expected 'false' to deeply equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1643046679412,
                    "endTime": 1643046679414,
                    "weight": 1
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a PascalCase DOM event dispatched by a Custom Element",
                    "suite": [
                        "advanced support",
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 1,
                    "log": [
                        "expected 'false' to deeply equal 'true'",
                        "AssertionError@webpack:///./node_modules/assertion-error/index.js?:74:13",
                        "module.exports/Assertion.prototype.assert@webpack:///./node_modules/chai/lib/chai/assertion.js?:152:13",
                        "assertEql@webpack:///./node_modules/chai/lib/chai/core/assertions.js?:1096:10",
                        "methodWrapper@webpack:///./node_modules/chai/lib/chai/utils/addMethod.js?:57:25",
                        "@webpack:///./src/advanced-tests.js?:133:49",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "AssertionError",
                            "message": "expected 'false' to deeply equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1643046679421,
                    "endTime": 1643046679422,
                    "weight": 1
                }
            ]
        },
        {
            "browser": {
                "id": "77925329",
                "fullName": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) HeadlessChrome/97.0.4692.71 Safari/537.36",
                "name": "Chrome Headless 97.0.4692.71 (Linux x86_64)",
                "state": "DISCONNECTED",
                "lastResult": {
                    "startTime": 1643046677243,
                    "total": 15,
                    "success": 12,
                    "failed": 3,
                    "skipped": 0,
                    "totalTime": 110,
                    "netTime": 16,
                    "error": false,
                    "disconnected": false
                },
                "disconnectsCount": 0,
                "noActivityTimeout": 30000,
                "disconnectDelay": 2000
            },
            "errors": [],
            "results": [
                {
                    "id": "",
                    "description": "can display a Custom Element with no children",
                    "suite": [
                        "basic support",
                        "no children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 3,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1643046677247,
                    "endTime": 1643046677250,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in a Shadow Root",
                    "suite": [
                        "basic support",
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 1,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1643046677257,
                    "endTime": 1643046677258,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in a Shadow Root and pass in Light DOM children",
                    "suite": [
                        "basic support",
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 1,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1643046677263,
                    "endTime": 1643046677264,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in the Shadow DOM and handle hiding and showing the element",
                    "suite": [
                        "basic support",
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 1,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1643046677267,
                    "endTime": 1643046677268,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "will pass boolean data as either an attribute or a property",
                    "suite": [
                        "basic support",
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 0,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1643046677274,
                    "endTime": 1643046677275,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "will pass numeric data as either an attribute or a property",
                    "suite": [
                        "basic support",
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 0,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1643046677279,
                    "endTime": 1643046677280,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "will pass string data as either an attribute or a property",
                    "suite": [
                        "basic support",
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 0,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1643046677286,
                    "endTime": 1643046677286,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "can imperatively listen to a DOM event dispatched by a Custom Element",
                    "suite": [
                        "basic support",
                        "events"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 1,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1643046677292,
                    "endTime": 1643046677293,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "will pass array data as a property",
                    "suite": [
                        "advanced support",
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 1,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1643046677299,
                    "endTime": 1643046677300,
                    "weight": 2
                },
                {
                    "id": "",
                    "description": "will pass object data as a property",
                    "suite": [
                        "advanced support",
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 3,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1643046677305,
                    "endTime": 1643046677308,
                    "weight": 2
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a lowercase DOM event dispatched by a Custom Element",
                    "suite": [
                        "advanced support",
                        "events"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 1,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1643046677313,
                    "endTime": 1643046677315,
                    "weight": 2
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a kebab-case DOM event dispatched by a Custom Element",
                    "suite": [
                        "advanced support",
                        "events"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 0,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1643046677321,
                    "endTime": 1643046677321,
                    "weight": 1
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a camelCase DOM event dispatched by a Custom Element",
                    "suite": [
                        "advanced support",
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 2,
                    "log": [
                        "AssertionError: expected 'false' to deeply equal 'true'",
                        "    at Context.eval (webpack:///./src/advanced-tests.js?:105:49)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "AssertionError",
                            "message": "expected 'false' to deeply equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1643046677327,
                    "endTime": 1643046677330,
                    "weight": 1
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a CAPScase DOM event dispatched by a Custom Element",
                    "suite": [
                        "advanced support",
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 1,
                    "log": [
                        "AssertionError: expected 'false' to deeply equal 'true'",
                        "    at Context.eval (webpack:///./src/advanced-tests.js?:119:49)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "AssertionError",
                            "message": "expected 'false' to deeply equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1643046677337,
                    "endTime": 1643046677338,
                    "weight": 1
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a PascalCase DOM event dispatched by a Custom Element",
                    "suite": [
                        "advanced support",
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 1,
                    "log": [
                        "AssertionError: expected 'false' to deeply equal 'true'",
                        "    at Context.eval (webpack:///./src/advanced-tests.js?:133:49)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "AssertionError",
                            "message": "expected 'false' to deeply equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1643046677344,
                    "endTime": 1643046677345,
                    "weight": 1
                }
            ]
        }
    ],
    "library": {
        "name": "skatejs",
        "version": "5.2.4"
    }
}