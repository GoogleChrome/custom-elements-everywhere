{
    "summary": {
        "success": 16,
        "failed": 14,
        "skipped": 0,
        "error": false,
        "disconnected": false,
        "exitCode": 1,
        "score": 71,
        "basicSupport": {
            "total": 16,
            "failed": 0,
            "passed": 16
        },
        "advancedSupport": {
            "total": 14,
            "failed": 14,
            "passed": 0
        }
    },
    "browsers": [
        {
            "browser": {
                "id": "48638321",
                "fullName": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) HeadlessChrome/96.0.4664.93 Safari/537.36",
                "name": "Chrome Headless 96.0.4664.93 (Linux x86_64)",
                "state": "DISCONNECTED",
                "lastResult": {
                    "startTime": 1639596984880,
                    "total": 15,
                    "success": 8,
                    "failed": 7,
                    "skipped": 0,
                    "totalTime": 84,
                    "netTime": 39,
                    "error": false,
                    "disconnected": false
                },
                "disconnectsCount": 0,
                "noActivityTimeout": 30000,
                "disconnectDelay": 2000
            },
            "errors": [],
            "results": [
                {
                    "id": "",
                    "description": "can display a Custom Element with no children",
                    "suite": [
                        "basic support",
                        "no children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 8,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1639596984890,
                    "endTime": 1639596984900,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in a Shadow Root",
                    "suite": [
                        "basic support",
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 2,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1639596984900,
                    "endTime": 1639596984902,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in a Shadow Root and pass in Light DOM children",
                    "suite": [
                        "basic support",
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 6,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1639596984909,
                    "endTime": 1639596984915,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in the Shadow DOM and handle hiding and showing the element",
                    "suite": [
                        "basic support",
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 3,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1639596984921,
                    "endTime": 1639596984925,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "will pass boolean data as either an attribute or a property",
                    "suite": [
                        "basic support",
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 1,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1639596984926,
                    "endTime": 1639596984927,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "will pass numeric data as either an attribute or a property",
                    "suite": [
                        "basic support",
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 1,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1639596984927,
                    "endTime": 1639596984928,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "will pass string data as either an attribute or a property",
                    "suite": [
                        "basic support",
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 1,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1639596984928,
                    "endTime": 1639596984929,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "can imperatively listen to a DOM event dispatched by a Custom Element",
                    "suite": [
                        "basic support",
                        "events"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 3,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1639596984929,
                    "endTime": 1639596984933,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "will pass array data as a property",
                    "suite": [
                        "advanced support",
                        "attributes and properties"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 2,
                    "log": [
                        "AssertionError: expected undefined to deeply equal [ 'R', 'e', 'a', 'c', 't' ]",
                        "    at Context.eval (webpack:///./src/advanced-tests.js?:51:61)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "AssertionError",
                            "message": "expected undefined to deeply equal [ 'R', 'e', 'a', 'c', 't' ]",
                            "showDiff": true,
                            "actual": "[undefined]",
                            "expected": "[\n  \"R\"\n  \"e\"\n  \"a\"\n  \"c\"\n  \"t\"\n]"
                        }
                    ],
                    "startTime": 1639596984933,
                    "endTime": 1639596984937,
                    "weight": 2
                },
                {
                    "id": "",
                    "description": "will pass object data as a property",
                    "suite": [
                        "advanced support",
                        "attributes and properties"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 2,
                    "log": [
                        "AssertionError: expected undefined to deeply equal { org: 'facebook', repo: 'react' }",
                        "    at Context.eval (webpack:///./src/advanced-tests.js?:58:61)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "AssertionError",
                            "message": "expected undefined to deeply equal { org: 'facebook', repo: 'react' }",
                            "showDiff": true,
                            "actual": "[undefined]",
                            "expected": "{\n  \"org\": \"facebook\"\n  \"repo\": \"react\"\n}"
                        }
                    ],
                    "startTime": 1639596984937,
                    "endTime": 1639596984939,
                    "weight": 2
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a lowercase DOM event dispatched by a Custom Element",
                    "suite": [
                        "advanced support",
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 2,
                    "log": [
                        "AssertionError: expected 'false' to deeply equal 'true'",
                        "    at Context.eval (webpack:///./src/advanced-tests.js?:73:76)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "AssertionError",
                            "message": "expected 'false' to deeply equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1639596984939,
                    "endTime": 1639596984941,
                    "weight": 2
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a kebab-case DOM event dispatched by a Custom Element",
                    "suite": [
                        "advanced support",
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 1,
                    "log": [
                        "AssertionError: expected 'false' to deeply equal 'true'",
                        "    at Context.eval (webpack:///./src/advanced-tests.js?:83:76)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "AssertionError",
                            "message": "expected 'false' to deeply equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1639596984941,
                    "endTime": 1639596984943,
                    "weight": 1
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a camelCase DOM event dispatched by a Custom Element",
                    "suite": [
                        "advanced support",
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 1,
                    "log": [
                        "AssertionError: expected 'false' to deeply equal 'true'",
                        "    at Context.eval (webpack:///./src/advanced-tests.js?:93:76)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "AssertionError",
                            "message": "expected 'false' to deeply equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1639596984944,
                    "endTime": 1639596984945,
                    "weight": 1
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a CAPScase DOM event dispatched by a Custom Element",
                    "suite": [
                        "advanced support",
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 5,
                    "log": [
                        "AssertionError: expected 'false' to deeply equal 'true'",
                        "    at Context.eval (webpack:///./src/advanced-tests.js?:103:76)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "AssertionError",
                            "message": "expected 'false' to deeply equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1639596984945,
                    "endTime": 1639596984950,
                    "weight": 1
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a PascalCase DOM event dispatched by a Custom Element",
                    "suite": [
                        "advanced support",
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 1,
                    "log": [
                        "AssertionError: expected 'false' to deeply equal 'true'",
                        "    at Context.eval (webpack:///./src/advanced-tests.js?:113:76)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "AssertionError",
                            "message": "expected 'false' to deeply equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1639596984950,
                    "endTime": 1639596984952,
                    "weight": 1
                }
            ]
        },
        {
            "browser": {
                "id": "96291944",
                "fullName": "FirefoxHeadless",
                "name": "FirefoxHeadless",
                "state": "DISCONNECTED",
                "lastResult": {
                    "startTime": 1639596986327,
                    "total": 15,
                    "success": 8,
                    "failed": 7,
                    "skipped": 0,
                    "totalTime": 154,
                    "netTime": 123,
                    "error": false,
                    "disconnected": false
                },
                "disconnectsCount": 0,
                "noActivityTimeout": 30000,
                "disconnectDelay": 2000
            },
            "errors": [],
            "results": [
                {
                    "id": "",
                    "description": "can display a Custom Element with no children",
                    "suite": [
                        "basic support",
                        "no children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 30,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1639596986306,
                    "endTime": 1639596986337,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in a Shadow Root",
                    "suite": [
                        "basic support",
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 4,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1639596986339,
                    "endTime": 1639596986343,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in a Shadow Root and pass in Light DOM children",
                    "suite": [
                        "basic support",
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 20,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1639596986344,
                    "endTime": 1639596986364,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in the Shadow DOM and handle hiding and showing the element",
                    "suite": [
                        "basic support",
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 6,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1639596986376,
                    "endTime": 1639596986383,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "will pass boolean data as either an attribute or a property",
                    "suite": [
                        "basic support",
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 2,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1639596986389,
                    "endTime": 1639596986395,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "will pass numeric data as either an attribute or a property",
                    "suite": [
                        "basic support",
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 1,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1639596986395,
                    "endTime": 1639596986396,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "will pass string data as either an attribute or a property",
                    "suite": [
                        "basic support",
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 10,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1639596986397,
                    "endTime": 1639596986407,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "can imperatively listen to a DOM event dispatched by a Custom Element",
                    "suite": [
                        "basic support",
                        "events"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 7,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1639596986407,
                    "endTime": 1639596986415,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "will pass array data as a property",
                    "suite": [
                        "advanced support",
                        "attributes and properties"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 6,
                    "log": [
                        "expected undefined to deeply equal [ 'R', 'e', 'a', 'c', 't' ]",
                        "AssertionError@webpack:///./node_modules/assertion-error/index.js?:74:13",
                        "module.exports/Assertion.prototype.assert@webpack:///./node_modules/chai/lib/chai/assertion.js?:152:13",
                        "assertEql@webpack:///./node_modules/chai/lib/chai/core/assertions.js?:1096:10",
                        "methodWrapper@webpack:///./node_modules/chai/lib/chai/utils/addMethod.js?:57:25",
                        "@webpack:///./src/advanced-tests.js?:51:61",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "AssertionError",
                            "message": "expected undefined to deeply equal [ 'R', 'e', 'a', 'c', 't' ]",
                            "showDiff": true,
                            "actual": "[undefined]",
                            "expected": "[\n  \"R\"\n  \"e\"\n  \"a\"\n  \"c\"\n  \"t\"\n]"
                        }
                    ],
                    "startTime": 1639596986416,
                    "endTime": 1639596986422,
                    "weight": 2
                },
                {
                    "id": "",
                    "description": "will pass object data as a property",
                    "suite": [
                        "advanced support",
                        "attributes and properties"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 1,
                    "log": [
                        "expected undefined to deeply equal { org: 'facebook', repo: 'react' }",
                        "AssertionError@webpack:///./node_modules/assertion-error/index.js?:74:13",
                        "module.exports/Assertion.prototype.assert@webpack:///./node_modules/chai/lib/chai/assertion.js?:152:13",
                        "assertEql@webpack:///./node_modules/chai/lib/chai/core/assertions.js?:1096:10",
                        "methodWrapper@webpack:///./node_modules/chai/lib/chai/utils/addMethod.js?:57:25",
                        "@webpack:///./src/advanced-tests.js?:58:61",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "AssertionError",
                            "message": "expected undefined to deeply equal { org: 'facebook', repo: 'react' }",
                            "showDiff": true,
                            "actual": "[undefined]",
                            "expected": "{\n  \"org\": \"facebook\"\n  \"repo\": \"react\"\n}"
                        }
                    ],
                    "startTime": 1639596986423,
                    "endTime": 1639596986425,
                    "weight": 2
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a lowercase DOM event dispatched by a Custom Element",
                    "suite": [
                        "advanced support",
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 5,
                    "log": [
                        "expected 'false' to deeply equal 'true'",
                        "AssertionError@webpack:///./node_modules/assertion-error/index.js?:74:13",
                        "module.exports/Assertion.prototype.assert@webpack:///./node_modules/chai/lib/chai/assertion.js?:152:13",
                        "assertEql@webpack:///./node_modules/chai/lib/chai/core/assertions.js?:1096:10",
                        "methodWrapper@webpack:///./node_modules/chai/lib/chai/utils/addMethod.js?:57:25",
                        "@webpack:///./src/advanced-tests.js?:73:76",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "AssertionError",
                            "message": "expected 'false' to deeply equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1639596986425,
                    "endTime": 1639596986431,
                    "weight": 2
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a kebab-case DOM event dispatched by a Custom Element",
                    "suite": [
                        "advanced support",
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 17,
                    "log": [
                        "expected 'false' to deeply equal 'true'",
                        "AssertionError@webpack:///./node_modules/assertion-error/index.js?:74:13",
                        "module.exports/Assertion.prototype.assert@webpack:///./node_modules/chai/lib/chai/assertion.js?:152:13",
                        "assertEql@webpack:///./node_modules/chai/lib/chai/core/assertions.js?:1096:10",
                        "methodWrapper@webpack:///./node_modules/chai/lib/chai/utils/addMethod.js?:57:25",
                        "@webpack:///./src/advanced-tests.js?:83:76",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "AssertionError",
                            "message": "expected 'false' to deeply equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1639596986431,
                    "endTime": 1639596986448,
                    "weight": 1
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a camelCase DOM event dispatched by a Custom Element",
                    "suite": [
                        "advanced support",
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 5,
                    "log": [
                        "expected 'false' to deeply equal 'true'",
                        "AssertionError@webpack:///./node_modules/assertion-error/index.js?:74:13",
                        "module.exports/Assertion.prototype.assert@webpack:///./node_modules/chai/lib/chai/assertion.js?:152:13",
                        "assertEql@webpack:///./node_modules/chai/lib/chai/core/assertions.js?:1096:10",
                        "methodWrapper@webpack:///./node_modules/chai/lib/chai/utils/addMethod.js?:57:25",
                        "@webpack:///./src/advanced-tests.js?:93:76",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "AssertionError",
                            "message": "expected 'false' to deeply equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1639596986448,
                    "endTime": 1639596986453,
                    "weight": 1
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a CAPScase DOM event dispatched by a Custom Element",
                    "suite": [
                        "advanced support",
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 4,
                    "log": [
                        "expected 'false' to deeply equal 'true'",
                        "AssertionError@webpack:///./node_modules/assertion-error/index.js?:74:13",
                        "module.exports/Assertion.prototype.assert@webpack:///./node_modules/chai/lib/chai/assertion.js?:152:13",
                        "assertEql@webpack:///./node_modules/chai/lib/chai/core/assertions.js?:1096:10",
                        "methodWrapper@webpack:///./node_modules/chai/lib/chai/utils/addMethod.js?:57:25",
                        "@webpack:///./src/advanced-tests.js?:103:76",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "AssertionError",
                            "message": "expected 'false' to deeply equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1639596986453,
                    "endTime": 1639596986457,
                    "weight": 1
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a PascalCase DOM event dispatched by a Custom Element",
                    "suite": [
                        "advanced support",
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 5,
                    "log": [
                        "expected 'false' to deeply equal 'true'",
                        "AssertionError@webpack:///./node_modules/assertion-error/index.js?:74:13",
                        "module.exports/Assertion.prototype.assert@webpack:///./node_modules/chai/lib/chai/assertion.js?:152:13",
                        "assertEql@webpack:///./node_modules/chai/lib/chai/core/assertions.js?:1096:10",
                        "methodWrapper@webpack:///./node_modules/chai/lib/chai/utils/addMethod.js?:57:25",
                        "@webpack:///./src/advanced-tests.js?:113:76",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "AssertionError",
                            "message": "expected 'false' to deeply equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1639596986457,
                    "endTime": 1639596986464,
                    "weight": 1
                }
            ]
        }
    ],
    "library": {
        "name": "react",
        "version": "17.0.2"
    }
}