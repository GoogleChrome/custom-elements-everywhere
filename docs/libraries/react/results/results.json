{
    "summary": {
        "success": 16,
        "failed": 14,
        "error": false,
        "disconnected": false,
        "exitCode": 1,
        "score": 71,
        "basicSupport": {
            "total": 16,
            "failed": 0,
            "passed": 16
        },
        "advancedSupport": {
            "total": 14,
            "failed": 14,
            "passed": 0
        }
    },
    "browsers": [
        {
            "browser": {
                "id": "38301027",
                "fullName": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10.12; rv:57.0) Gecko/20100101 Firefox/57.0",
                "name": "Firefox 57.0.0 (Mac OS X 10.12.0)",
                "state": 5,
                "lastResult": {
                    "success": 8,
                    "failed": 7,
                    "skipped": 0,
                    "total": 15,
                    "totalTime": 1957,
                    "netTime": 698,
                    "error": false,
                    "disconnected": false
                },
                "disconnectsCount": 0
            },
            "errors": [],
            "results": [
                {
                    "id": "",
                    "description": "can display a Custom Element with no children",
                    "suite": [
                        "basic support",
                        "no children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 169,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1512499459050,
                    "endTime": 1512499459224,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in a Shadow Root",
                    "suite": [
                        "basic support",
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 88,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1512499459290,
                    "endTime": 1512499459456,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in a Shadow Root and pass in Light DOM children",
                    "suite": [
                        "basic support",
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 19,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1512499459600,
                    "endTime": 1512499459620,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in the Shadow DOM and handle hiding and showing the element",
                    "suite": [
                        "basic support",
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 122,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1512499459732,
                    "endTime": 1512499459854,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "will pass boolean data as either an attribute or a property",
                    "suite": [
                        "basic support",
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 9,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1512499460038,
                    "endTime": 1512499460048,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "will pass numeric data as either an attribute or a property",
                    "suite": [
                        "basic support",
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 7,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1512499460055,
                    "endTime": 1512499460073,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "will pass string data as either an attribute or a property",
                    "suite": [
                        "basic support",
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 4,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1512499460080,
                    "endTime": 1512499460085,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "can imperatively listen to a DOM event dispatched by a Custom Element",
                    "suite": [
                        "basic support",
                        "events"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 29,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1512499460086,
                    "endTime": 1512499460115,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "will pass array data as a property",
                    "suite": [
                        "advanced support",
                        "attributes and properties"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 5,
                    "log": [
                        "Expected undefined to equal [ 'R', 'e', 'a', 'c', 't' ]",
                        "assert@base/tests.webpack.js?e1ff213e6b5eaad1450edd563f99bab22ee6b034:690:9",
                        "toEqual@base/tests.webpack.js?e1ff213e6b5eaad1450edd563f99bab22ee6b034:1165:10",
                        "@base/tests.webpack.js?e1ff213e6b5eaad1450edd563f99bab22ee6b034:24586:8",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected undefined to equal [ 'R', 'e', 'a', 'c', 't' ]",
                            "showDiff": true,
                            "actual": "[undefined]",
                            "expected": "[\n  \"R\"\n  \"e\"\n  \"a\"\n  \"c\"\n  \"t\"\n]"
                        }
                    ],
                    "startTime": 1512499460117,
                    "endTime": 1512499460125,
                    "weight": 2
                },
                {
                    "id": "",
                    "description": "will pass object data as a property",
                    "suite": [
                        "advanced support",
                        "attributes and properties"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 8,
                    "log": [
                        "Expected undefined to equal { org: 'facebook', repo: 'react' }",
                        "assert@base/tests.webpack.js?e1ff213e6b5eaad1450edd563f99bab22ee6b034:690:9",
                        "toEqual@base/tests.webpack.js?e1ff213e6b5eaad1450edd563f99bab22ee6b034:1165:10",
                        "@base/tests.webpack.js?e1ff213e6b5eaad1450edd563f99bab22ee6b034:24594:8",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected undefined to equal { org: 'facebook', repo: 'react' }",
                            "showDiff": true,
                            "actual": "[undefined]",
                            "expected": "{\n  \"org\": \"facebook\"\n  \"repo\": \"react\"\n}"
                        }
                    ],
                    "startTime": 1512499460126,
                    "endTime": 1512499460137,
                    "weight": 2
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a lowercase DOM event dispatched by a Custom Element",
                    "suite": [
                        "advanced support",
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 187,
                    "log": [
                        "Expected 'false' to equal 'true'",
                        "assert@base/tests.webpack.js?e1ff213e6b5eaad1450edd563f99bab22ee6b034:690:9",
                        "toEqual@base/tests.webpack.js?e1ff213e6b5eaad1450edd563f99bab22ee6b034:1165:10",
                        "@base/tests.webpack.js?e1ff213e6b5eaad1450edd563f99bab22ee6b034:24607:8",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1512499460160,
                    "endTime": 1512499460351,
                    "weight": 2
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a kebab-case DOM event dispatched by a Custom Element",
                    "suite": [
                        "advanced support",
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 11,
                    "log": [
                        "Expected 'false' to equal 'true'",
                        "assert@base/tests.webpack.js?e1ff213e6b5eaad1450edd563f99bab22ee6b034:690:9",
                        "toEqual@base/tests.webpack.js?e1ff213e6b5eaad1450edd563f99bab22ee6b034:1165:10",
                        "@base/tests.webpack.js?e1ff213e6b5eaad1450edd563f99bab22ee6b034:24618:8",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1512499460441,
                    "endTime": 1512499460453,
                    "weight": 1
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a camelCase DOM event dispatched by a Custom Element",
                    "suite": [
                        "advanced support",
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 5,
                    "log": [
                        "Expected 'false' to equal 'true'",
                        "assert@base/tests.webpack.js?e1ff213e6b5eaad1450edd563f99bab22ee6b034:690:9",
                        "toEqual@base/tests.webpack.js?e1ff213e6b5eaad1450edd563f99bab22ee6b034:1165:10",
                        "@base/tests.webpack.js?e1ff213e6b5eaad1450edd563f99bab22ee6b034:24629:8",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1512499460454,
                    "endTime": 1512499460459,
                    "weight": 1
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a CAPScase DOM event dispatched by a Custom Element",
                    "suite": [
                        "advanced support",
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 25,
                    "log": [
                        "Expected 'false' to equal 'true'",
                        "assert@base/tests.webpack.js?e1ff213e6b5eaad1450edd563f99bab22ee6b034:690:9",
                        "toEqual@base/tests.webpack.js?e1ff213e6b5eaad1450edd563f99bab22ee6b034:1165:10",
                        "@base/tests.webpack.js?e1ff213e6b5eaad1450edd563f99bab22ee6b034:24640:8",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1512499460473,
                    "endTime": 1512499460501,
                    "weight": 1
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a PascalCase DOM event dispatched by a Custom Element",
                    "suite": [
                        "advanced support",
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 10,
                    "log": [
                        "Expected 'false' to equal 'true'",
                        "assert@base/tests.webpack.js?e1ff213e6b5eaad1450edd563f99bab22ee6b034:690:9",
                        "toEqual@base/tests.webpack.js?e1ff213e6b5eaad1450edd563f99bab22ee6b034:1165:10",
                        "@base/tests.webpack.js?e1ff213e6b5eaad1450edd563f99bab22ee6b034:24651:8",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1512499460506,
                    "endTime": 1512499460518,
                    "weight": 1
                }
            ]
        },
        {
            "browser": {
                "id": "80569660",
                "fullName": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_6) AppleWebKit/537.36 (KHTML, like Gecko) HeadlessChrome/62.0.3202.94 Safari/537.36",
                "name": "HeadlessChrome 0.0.0 (Mac OS X 10.12.6)",
                "state": 5,
                "lastResult": {
                    "success": 8,
                    "failed": 7,
                    "skipped": 0,
                    "total": 15,
                    "totalTime": 1011,
                    "netTime": 560,
                    "error": false,
                    "disconnected": false
                },
                "disconnectsCount": 0
            },
            "errors": [],
            "results": [
                {
                    "id": "",
                    "description": "can display a Custom Element with no children",
                    "suite": [
                        "basic support",
                        "no children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 174,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1512499440798,
                    "endTime": 1512499440982,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in a Shadow Root",
                    "suite": [
                        "basic support",
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 3,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1512499441013,
                    "endTime": 1512499441017,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in a Shadow Root and pass in Light DOM children",
                    "suite": [
                        "basic support",
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 173,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1512499441017,
                    "endTime": 1512499441190,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in the Shadow DOM and handle hiding and showing the element",
                    "suite": [
                        "basic support",
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 11,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1512499441301,
                    "endTime": 1512499441313,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "will pass boolean data as either an attribute or a property",
                    "suite": [
                        "basic support",
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 94,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1512499441314,
                    "endTime": 1512499441410,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "will pass numeric data as either an attribute or a property",
                    "suite": [
                        "basic support",
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 3,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1512499441420,
                    "endTime": 1512499441423,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "will pass string data as either an attribute or a property",
                    "suite": [
                        "basic support",
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 6,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1512499441423,
                    "endTime": 1512499441429,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "can imperatively listen to a DOM event dispatched by a Custom Element",
                    "suite": [
                        "basic support",
                        "events"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 15,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1512499441430,
                    "endTime": 1512499441445,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "will pass array data as a property",
                    "suite": [
                        "advanced support",
                        "attributes and properties"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 3,
                    "log": [
                        "Error: Expected undefined to equal [ 'R', 'e', 'a', 'c', 't' ]",
                        "    at assert (base/tests.webpack.js?e1ff213e6b5eaad1450edd563f99bab22ee6b034:690:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?e1ff213e6b5eaad1450edd563f99bab22ee6b034:1165:30)",
                        "    at Context.<anonymous> (base/tests.webpack.js?e1ff213e6b5eaad1450edd563f99bab22ee6b034:24586:35)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected undefined to equal [ 'R', 'e', 'a', 'c', 't' ]",
                            "showDiff": true,
                            "actual": "[undefined]",
                            "expected": "[\n  \"R\"\n  \"e\"\n  \"a\"\n  \"c\"\n  \"t\"\n]"
                        }
                    ],
                    "startTime": 1512499441445,
                    "endTime": 1512499441541,
                    "weight": 2
                },
                {
                    "id": "",
                    "description": "will pass object data as a property",
                    "suite": [
                        "advanced support",
                        "attributes and properties"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 1,
                    "log": [
                        "Error: Expected undefined to equal { org: 'facebook', repo: 'react' }",
                        "    at assert (base/tests.webpack.js?e1ff213e6b5eaad1450edd563f99bab22ee6b034:690:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?e1ff213e6b5eaad1450edd563f99bab22ee6b034:1165:30)",
                        "    at Context.<anonymous> (base/tests.webpack.js?e1ff213e6b5eaad1450edd563f99bab22ee6b034:24594:35)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected undefined to equal { org: 'facebook', repo: 'react' }",
                            "showDiff": true,
                            "actual": "[undefined]",
                            "expected": "{\n  \"org\": \"facebook\"\n  \"repo\": \"react\"\n}"
                        }
                    ],
                    "startTime": 1512499441656,
                    "endTime": 1512499441660,
                    "weight": 2
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a lowercase DOM event dispatched by a Custom Element",
                    "suite": [
                        "advanced support",
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 37,
                    "log": [
                        "Error: Expected 'false' to equal 'true'",
                        "    at assert (base/tests.webpack.js?e1ff213e6b5eaad1450edd563f99bab22ee6b034:690:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?e1ff213e6b5eaad1450edd563f99bab22ee6b034:1165:30)",
                        "    at Context.<anonymous> (base/tests.webpack.js?e1ff213e6b5eaad1450edd563f99bab22ee6b034:24607:50)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1512499441660,
                    "endTime": 1512499441698,
                    "weight": 2
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a kebab-case DOM event dispatched by a Custom Element",
                    "suite": [
                        "advanced support",
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 7,
                    "log": [
                        "Error: Expected 'false' to equal 'true'",
                        "    at assert (base/tests.webpack.js?e1ff213e6b5eaad1450edd563f99bab22ee6b034:690:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?e1ff213e6b5eaad1450edd563f99bab22ee6b034:1165:30)",
                        "    at Context.<anonymous> (base/tests.webpack.js?e1ff213e6b5eaad1450edd563f99bab22ee6b034:24618:50)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1512499441699,
                    "endTime": 1512499441706,
                    "weight": 1
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a camelCase DOM event dispatched by a Custom Element",
                    "suite": [
                        "advanced support",
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 23,
                    "log": [
                        "Error: Expected 'false' to equal 'true'",
                        "    at assert (base/tests.webpack.js?e1ff213e6b5eaad1450edd563f99bab22ee6b034:690:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?e1ff213e6b5eaad1450edd563f99bab22ee6b034:1165:30)",
                        "    at Context.<anonymous> (base/tests.webpack.js?e1ff213e6b5eaad1450edd563f99bab22ee6b034:24629:50)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1512499441722,
                    "endTime": 1512499441762,
                    "weight": 1
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a CAPScase DOM event dispatched by a Custom Element",
                    "suite": [
                        "advanced support",
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 6,
                    "log": [
                        "Error: Expected 'false' to equal 'true'",
                        "    at assert (base/tests.webpack.js?e1ff213e6b5eaad1450edd563f99bab22ee6b034:690:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?e1ff213e6b5eaad1450edd563f99bab22ee6b034:1165:30)",
                        "    at Context.<anonymous> (base/tests.webpack.js?e1ff213e6b5eaad1450edd563f99bab22ee6b034:24640:50)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1512499441771,
                    "endTime": 1512499441779,
                    "weight": 1
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a PascalCase DOM event dispatched by a Custom Element",
                    "suite": [
                        "advanced support",
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 4,
                    "log": [
                        "Error: Expected 'false' to equal 'true'",
                        "    at assert (base/tests.webpack.js?e1ff213e6b5eaad1450edd563f99bab22ee6b034:690:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?e1ff213e6b5eaad1450edd563f99bab22ee6b034:1165:30)",
                        "    at Context.<anonymous> (base/tests.webpack.js?e1ff213e6b5eaad1450edd563f99bab22ee6b034:24651:50)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1512499441779,
                    "endTime": 1512499441783,
                    "weight": 1
                }
            ]
        }
    ],
    "library": {
        "name": "react",
        "version": "16.2.0"
    }
}