{
    "summary": {
        "success": 10,
        "failed": 20,
        "error": false,
        "disconnected": false,
        "exitCode": 1
    },
    "browsers": [
        {
            "browser": {
                "id": "27612816",
                "fullName": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10.12; rv:55.0) Gecko/20100101 Firefox/55.0",
                "name": "Firefox 55.0.0 (Mac OS X 10.12.0)",
                "state": 5,
                "lastResult": {
                    "success": 5,
                    "failed": 10,
                    "skipped": 0,
                    "total": 15,
                    "totalTime": 2585,
                    "netTime": 345,
                    "error": false,
                    "disconnected": false
                },
                "disconnectsCount": 0
            },
            "errors": [],
            "results": [
                {
                    "id": "",
                    "description": "can display a CE with no children",
                    "suite": [
                        "no children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 24,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1507413198838,
                    "endTime": 1507413199114
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in a Shadow Root",
                    "suite": [
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 10,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1507413199121,
                    "endTime": 1507413199166
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in a Shadow Root and pass in Light DOM children",
                    "suite": [
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 124,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1507413199170,
                    "endTime": 1507413199560
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in a Shadow Root and handle hiding and showing the element",
                    "suite": [
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 40,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1507413199686,
                    "endTime": 1507413199745
                },
                {
                    "id": "",
                    "description": "will pass boolean data as either an attribute or a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 1,
                    "log": [
                        "Expected true to be false",
                        "assert@base/tests.webpack.js?406ffbc2717bb37547612c8699b995e38b74736c:108:9",
                        "toBe@base/tests.webpack.js?406ffbc2717bb37547612c8699b995e38b74736c:191:8",
                        "@base/tests.webpack.js?406ffbc2717bb37547612c8699b995e38b74736c:38577:7",
                        ""
                    ],
                    "assertionErrors": [],
                    "startTime": 1507413199750,
                    "endTime": 1507413199777
                },
                {
                    "id": "",
                    "description": "will pass numeric data as either an attribute or a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 2,
                    "log": [
                        "Expected '{{$ctrl.num}}' to equal 42",
                        "assert@base/tests.webpack.js?406ffbc2717bb37547612c8699b995e38b74736c:108:9",
                        "toEqual@base/tests.webpack.js?406ffbc2717bb37547612c8699b995e38b74736c:206:10",
                        "@base/tests.webpack.js?406ffbc2717bb37547612c8699b995e38b74736c:38583:5",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected '{{$ctrl.num}}' to equal 42",
                            "showDiff": true,
                            "actual": "\"{{$ctrl.num}}\"",
                            "expected": "42"
                        }
                    ],
                    "startTime": 1507413199865,
                    "endTime": 1507413199889
                },
                {
                    "id": "",
                    "description": "will pass string data as either an attribute or a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 0,
                    "log": [
                        "Expected '{{$ctrl.str}}' to equal 'Angular'",
                        "assert@base/tests.webpack.js?406ffbc2717bb37547612c8699b995e38b74736c:108:9",
                        "toEqual@base/tests.webpack.js?406ffbc2717bb37547612c8699b995e38b74736c:206:10",
                        "@base/tests.webpack.js?406ffbc2717bb37547612c8699b995e38b74736c:38588:5",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected '{{$ctrl.str}}' to equal 'Angular'",
                            "showDiff": true,
                            "actual": "\"{{$ctrl.str}}\"",
                            "expected": "\"Angular\""
                        }
                    ],
                    "startTime": 1507413199893,
                    "endTime": 1507413199914
                },
                {
                    "id": "",
                    "description": "will pass array data as a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 14,
                    "log": [
                        "Expected undefined to equal [ 'A', 'n', 'g', 'u', 'l', 'a', 'r' ]",
                        "assert@base/tests.webpack.js?406ffbc2717bb37547612c8699b995e38b74736c:108:9",
                        "toEqual@base/tests.webpack.js?406ffbc2717bb37547612c8699b995e38b74736c:206:10",
                        "@base/tests.webpack.js?406ffbc2717bb37547612c8699b995e38b74736c:38593:5",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected undefined to equal [ 'A', 'n', 'g', 'u', 'l', 'a', 'r' ]",
                            "showDiff": true,
                            "actual": "[undefined]",
                            "expected": "[\n  \"A\"\n  \"n\"\n  \"g\"\n  \"u\"\n  \"l\"\n  \"a\"\n  \"r\"\n]"
                        }
                    ],
                    "startTime": 1507413199916,
                    "endTime": 1507413200027
                },
                {
                    "id": "",
                    "description": "will pass object data as a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 1,
                    "log": [
                        "Expected undefined to equal { org: 'angular', repo: 'angular' }",
                        "assert@base/tests.webpack.js?406ffbc2717bb37547612c8699b995e38b74736c:108:9",
                        "toEqual@base/tests.webpack.js?406ffbc2717bb37547612c8699b995e38b74736c:206:10",
                        "@base/tests.webpack.js?406ffbc2717bb37547612c8699b995e38b74736c:38598:5",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected undefined to equal { org: 'angular', repo: 'angular' }",
                            "showDiff": true,
                            "actual": "[undefined]",
                            "expected": "{\n  \"org\": \"angular\"\n  \"repo\": \"angular\"\n}"
                        }
                    ],
                    "startTime": 1507413200082,
                    "endTime": 1507413200164
                },
                {
                    "id": "",
                    "description": "can imperatively listen to a DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 45,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1507413200168,
                    "endTime": 1507413200246
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a lowercase DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 21,
                    "log": [
                        "Expected 'false' to equal 'true'",
                        "assert@base/tests.webpack.js?406ffbc2717bb37547612c8699b995e38b74736c:108:9",
                        "toEqual@base/tests.webpack.js?406ffbc2717bb37547612c8699b995e38b74736c:206:10",
                        "@base/tests.webpack.js?406ffbc2717bb37547612c8699b995e38b74736c:38621:5",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1507413200255,
                    "endTime": 1507413200336
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a kebab-case DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 12,
                    "log": [
                        "Expected 'false' to equal 'true'",
                        "assert@base/tests.webpack.js?406ffbc2717bb37547612c8699b995e38b74736c:108:9",
                        "toEqual@base/tests.webpack.js?406ffbc2717bb37547612c8699b995e38b74736c:206:10",
                        "@base/tests.webpack.js?406ffbc2717bb37547612c8699b995e38b74736c:38632:5",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1507413200339,
                    "endTime": 1507413200363
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a camelCase DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 9,
                    "log": [
                        "Expected 'false' to equal 'true'",
                        "assert@base/tests.webpack.js?406ffbc2717bb37547612c8699b995e38b74736c:108:9",
                        "toEqual@base/tests.webpack.js?406ffbc2717bb37547612c8699b995e38b74736c:206:10",
                        "@base/tests.webpack.js?406ffbc2717bb37547612c8699b995e38b74736c:38643:5",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1507413200365,
                    "endTime": 1507413200388
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a CAPScase DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 9,
                    "log": [
                        "Expected 'false' to equal 'true'",
                        "assert@base/tests.webpack.js?406ffbc2717bb37547612c8699b995e38b74736c:108:9",
                        "toEqual@base/tests.webpack.js?406ffbc2717bb37547612c8699b995e38b74736c:206:10",
                        "@base/tests.webpack.js?406ffbc2717bb37547612c8699b995e38b74736c:38654:5",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1507413200389,
                    "endTime": 1507413200403
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a PascalCase DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 33,
                    "log": [
                        "Expected 'false' to equal 'true'",
                        "assert@base/tests.webpack.js?406ffbc2717bb37547612c8699b995e38b74736c:108:9",
                        "toEqual@base/tests.webpack.js?406ffbc2717bb37547612c8699b995e38b74736c:206:10",
                        "@base/tests.webpack.js?406ffbc2717bb37547612c8699b995e38b74736c:38665:5",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1507413200404,
                    "endTime": 1507413200441
                }
            ]
        },
        {
            "browser": {
                "id": "31212419",
                "fullName": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_6) AppleWebKit/537.36 (KHTML, like Gecko) HeadlessChrome/61.0.3163.100 Safari/537.36",
                "name": "HeadlessChrome 0.0.0 (Mac OS X 10.12.6)",
                "state": 5,
                "lastResult": {
                    "success": 5,
                    "failed": 10,
                    "skipped": 0,
                    "total": 15,
                    "totalTime": 3422,
                    "netTime": 1496,
                    "error": false,
                    "disconnected": false
                },
                "disconnectsCount": 0
            },
            "errors": [],
            "results": [
                {
                    "id": "",
                    "description": "can display a CE with no children",
                    "suite": [
                        "no children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 223,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1507413187929,
                    "endTime": 1507413188701
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in a Shadow Root",
                    "suite": [
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 9,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1507413188708,
                    "endTime": 1507413188722
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in a Shadow Root and pass in Light DOM children",
                    "suite": [
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 514,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1507413188724,
                    "endTime": 1507413189246
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in a Shadow Root and handle hiding and showing the element",
                    "suite": [
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 202,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1507413189277,
                    "endTime": 1507413189497
                },
                {
                    "id": "",
                    "description": "will pass boolean data as either an attribute or a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 1,
                    "log": [
                        "Error: Expected true to be false",
                        "    at assert (base/tests.webpack.js?406ffbc2717bb37547612c8699b995e38b74736c:108:9)",
                        "    at Expectation.toBe (base/tests.webpack.js?406ffbc2717bb37547612c8699b995e38b74736c:191:28)",
                        "    at Context.it (base/tests.webpack.js?406ffbc2717bb37547612c8699b995e38b74736c:38577:75)"
                    ],
                    "assertionErrors": [],
                    "startTime": 1507413189511,
                    "endTime": 1507413189572
                },
                {
                    "id": "",
                    "description": "will pass numeric data as either an attribute or a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 139,
                    "log": [
                        "Error: Expected '{{$ctrl.num}}' to equal 42",
                        "    at assert (base/tests.webpack.js?406ffbc2717bb37547612c8699b995e38b74736c:108:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?406ffbc2717bb37547612c8699b995e38b74736c:206:30)",
                        "    at Context.it (base/tests.webpack.js?406ffbc2717bb37547612c8699b995e38b74736c:38583:58)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected '{{$ctrl.num}}' to equal 42",
                            "showDiff": true,
                            "actual": "\"{{$ctrl.num}}\"",
                            "expected": "42"
                        }
                    ],
                    "startTime": 1507413189579,
                    "endTime": 1507413189830
                },
                {
                    "id": "",
                    "description": "will pass string data as either an attribute or a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 0,
                    "log": [
                        "Error: Expected '{{$ctrl.str}}' to equal 'Angular'",
                        "    at assert (base/tests.webpack.js?406ffbc2717bb37547612c8699b995e38b74736c:108:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?406ffbc2717bb37547612c8699b995e38b74736c:206:30)",
                        "    at Context.it (base/tests.webpack.js?406ffbc2717bb37547612c8699b995e38b74736c:38588:58)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected '{{$ctrl.str}}' to equal 'Angular'",
                            "showDiff": true,
                            "actual": "\"{{$ctrl.str}}\"",
                            "expected": "\"Angular\""
                        }
                    ],
                    "startTime": 1507413189836,
                    "endTime": 1507413189848
                },
                {
                    "id": "",
                    "description": "will pass array data as a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 1,
                    "log": [
                        "Error: Expected undefined to equal [ 'A', 'n', 'g', 'u', 'l', 'a', 'r' ]",
                        "    at assert (base/tests.webpack.js?406ffbc2717bb37547612c8699b995e38b74736c:108:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?406ffbc2717bb37547612c8699b995e38b74736c:206:30)",
                        "    at Context.it (base/tests.webpack.js?406ffbc2717bb37547612c8699b995e38b74736c:38593:58)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected undefined to equal [ 'A', 'n', 'g', 'u', 'l', 'a', 'r' ]",
                            "showDiff": true,
                            "actual": "[undefined]",
                            "expected": "[\n  \"A\"\n  \"n\"\n  \"g\"\n  \"u\"\n  \"l\"\n  \"a\"\n  \"r\"\n]"
                        }
                    ],
                    "startTime": 1507413189849,
                    "endTime": 1507413190138
                },
                {
                    "id": "",
                    "description": "will pass object data as a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 0,
                    "log": [
                        "Error: Expected undefined to equal { org: 'angular', repo: 'angular' }",
                        "    at assert (base/tests.webpack.js?406ffbc2717bb37547612c8699b995e38b74736c:108:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?406ffbc2717bb37547612c8699b995e38b74736c:206:30)",
                        "    at Context.it (base/tests.webpack.js?406ffbc2717bb37547612c8699b995e38b74736c:38598:58)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected undefined to equal { org: 'angular', repo: 'angular' }",
                            "showDiff": true,
                            "actual": "[undefined]",
                            "expected": "{\n  \"org\": \"angular\"\n  \"repo\": \"angular\"\n}"
                        }
                    ],
                    "startTime": 1507413190139,
                    "endTime": 1507413190210
                },
                {
                    "id": "",
                    "description": "can imperatively listen to a DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 150,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1507413190210,
                    "endTime": 1507413190370
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a lowercase DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 24,
                    "log": [
                        "Error: Expected 'false' to equal 'true'",
                        "    at assert (base/tests.webpack.js?406ffbc2717bb37547612c8699b995e38b74736c:108:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?406ffbc2717bb37547612c8699b995e38b74736c:206:30)",
                        "    at Context.it (base/tests.webpack.js?406ffbc2717bb37547612c8699b995e38b74736c:38621:73)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1507413190375,
                    "endTime": 1507413190402
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a kebab-case DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 21,
                    "log": [
                        "Error: Expected 'false' to equal 'true'",
                        "    at assert (base/tests.webpack.js?406ffbc2717bb37547612c8699b995e38b74736c:108:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?406ffbc2717bb37547612c8699b995e38b74736c:206:30)",
                        "    at Context.it (base/tests.webpack.js?406ffbc2717bb37547612c8699b995e38b74736c:38632:73)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1507413190403,
                    "endTime": 1507413190713
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a camelCase DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 4,
                    "log": [
                        "Error: Expected 'false' to equal 'true'",
                        "    at assert (base/tests.webpack.js?406ffbc2717bb37547612c8699b995e38b74736c:108:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?406ffbc2717bb37547612c8699b995e38b74736c:206:30)",
                        "    at Context.it (base/tests.webpack.js?406ffbc2717bb37547612c8699b995e38b74736c:38643:73)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1507413190714,
                    "endTime": 1507413190724
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a CAPScase DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 190,
                    "log": [
                        "Error: Expected 'false' to equal 'true'",
                        "    at assert (base/tests.webpack.js?406ffbc2717bb37547612c8699b995e38b74736c:108:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?406ffbc2717bb37547612c8699b995e38b74736c:206:30)",
                        "    at Context.it (base/tests.webpack.js?406ffbc2717bb37547612c8699b995e38b74736c:38654:73)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1507413190725,
                    "endTime": 1507413190939
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a PascalCase DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 18,
                    "log": [
                        "Error: Expected 'false' to equal 'true'",
                        "    at assert (base/tests.webpack.js?406ffbc2717bb37547612c8699b995e38b74736c:108:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?406ffbc2717bb37547612c8699b995e38b74736c:206:30)",
                        "    at Context.it (base/tests.webpack.js?406ffbc2717bb37547612c8699b995e38b74736c:38665:73)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1507413190968,
                    "endTime": 1507413190999
                }
            ]
        }
    ],
    "library": {
        "name": "angular",
        "version": "1.6.6"
    }
}