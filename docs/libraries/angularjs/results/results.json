{
    "summary": {
        "success": 8,
        "failed": 7,
        "error": false,
        "disconnected": true,
        "exitCode": 1,
        "score": 71,
        "basicSupport": {
            "total": 8,
            "failed": 0,
            "passed": 8
        },
        "advancedSupport": {
            "total": 7,
            "failed": 7,
            "passed": 0
        }
    },
    "browsers": [
        {
            "browser": {
                "id": "61791497",
                "fullName": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_6) AppleWebKit/537.36 (KHTML, like Gecko) HeadlessChrome/62.0.3202.94 Safari/537.36",
                "name": "HeadlessChrome 0.0.0 (Mac OS X 10.12.6)",
                "state": 5,
                "lastResult": {
                    "success": 8,
                    "failed": 7,
                    "skipped": 0,
                    "total": 15,
                    "totalTime": 1584,
                    "netTime": 363,
                    "error": false,
                    "disconnected": false
                },
                "disconnectsCount": 0
            },
            "errors": [],
            "results": [
                {
                    "id": "",
                    "description": "can display a CE with no children",
                    "suite": [
                        "basic support",
                        "no children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 9,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1512499445021,
                    "endTime": 1512499445125,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in a Shadow Root",
                    "suite": [
                        "basic support",
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 3,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1512499445129,
                    "endTime": 1512499445137,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in a Shadow Root and pass in Light DOM children",
                    "suite": [
                        "basic support",
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 74,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1512499445377,
                    "endTime": 1512499445464,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in a Shadow Root and handle hiding and showing the element",
                    "suite": [
                        "basic support",
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 34,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1512499445470,
                    "endTime": 1512499445526,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "will pass boolean data as either an attribute or a property",
                    "suite": [
                        "basic support",
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 1,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1512499445528,
                    "endTime": 1512499445583,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "will pass numeric data as either an attribute or a property",
                    "suite": [
                        "basic support",
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 0,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1512499445583,
                    "endTime": 1512499445595,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "will pass string data as either an attribute or a property",
                    "suite": [
                        "basic support",
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 0,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1512499445600,
                    "endTime": 1512499445612,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "can imperatively listen to a DOM event dispatched by a Custom Element",
                    "suite": [
                        "basic support",
                        "events"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 96,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1512499445614,
                    "endTime": 1512499445713,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "will pass array data as a property",
                    "suite": [
                        "advanced support",
                        "attributes and properties"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 3,
                    "log": [
                        "ReferenceError: wc is not defined",
                        "    at Context.<anonymous> (base/tests.webpack.js?76caf3aaf86fe9c314c9d6cab6800f8389f76f06:42777:18)"
                    ],
                    "assertionErrors": [],
                    "startTime": 1512499445719,
                    "endTime": 1512499445727,
                    "weight": 2
                },
                {
                    "id": "",
                    "description": "will pass object data as a property",
                    "suite": [
                        "advanced support",
                        "attributes and properties"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 0,
                    "log": [
                        "ReferenceError: wc is not defined",
                        "    at Context.<anonymous> (base/tests.webpack.js?76caf3aaf86fe9c314c9d6cab6800f8389f76f06:42783:18)"
                    ],
                    "assertionErrors": [],
                    "startTime": 1512499445744,
                    "endTime": 1512499445792,
                    "weight": 2
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a lowercase DOM event dispatched by a Custom Element",
                    "suite": [
                        "advanced support",
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 90,
                    "log": [
                        "Error: Expected 'false' to equal 'true'",
                        "    at assert (base/tests.webpack.js?76caf3aaf86fe9c314c9d6cab6800f8389f76f06:108:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?76caf3aaf86fe9c314c9d6cab6800f8389f76f06:242:30)",
                        "    at Context.<anonymous> (base/tests.webpack.js?76caf3aaf86fe9c314c9d6cab6800f8389f76f06:42798:75)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1512499445792,
                    "endTime": 1512499445887,
                    "weight": 2
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a kebab-case DOM event dispatched by a Custom Element",
                    "suite": [
                        "advanced support",
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 11,
                    "log": [
                        "Error: Expected 'false' to equal 'true'",
                        "    at assert (base/tests.webpack.js?76caf3aaf86fe9c314c9d6cab6800f8389f76f06:108:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?76caf3aaf86fe9c314c9d6cab6800f8389f76f06:242:30)",
                        "    at Context.<anonymous> (base/tests.webpack.js?76caf3aaf86fe9c314c9d6cab6800f8389f76f06:42810:75)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1512499445892,
                    "endTime": 1512499445906,
                    "weight": 1
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a camelCase DOM event dispatched by a Custom Element",
                    "suite": [
                        "advanced support",
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 3,
                    "log": [
                        "Error: Expected 'false' to equal 'true'",
                        "    at assert (base/tests.webpack.js?76caf3aaf86fe9c314c9d6cab6800f8389f76f06:108:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?76caf3aaf86fe9c314c9d6cab6800f8389f76f06:242:30)",
                        "    at Context.<anonymous> (base/tests.webpack.js?76caf3aaf86fe9c314c9d6cab6800f8389f76f06:42822:75)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1512499445908,
                    "endTime": 1512499445960,
                    "weight": 1
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a CAPScase DOM event dispatched by a Custom Element",
                    "suite": [
                        "advanced support",
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 4,
                    "log": [
                        "Error: Expected 'false' to equal 'true'",
                        "    at assert (base/tests.webpack.js?76caf3aaf86fe9c314c9d6cab6800f8389f76f06:108:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?76caf3aaf86fe9c314c9d6cab6800f8389f76f06:242:30)",
                        "    at Context.<anonymous> (base/tests.webpack.js?76caf3aaf86fe9c314c9d6cab6800f8389f76f06:42834:75)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1512499445961,
                    "endTime": 1512499445973,
                    "weight": 1
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a PascalCase DOM event dispatched by a Custom Element",
                    "suite": [
                        "advanced support",
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 35,
                    "log": [
                        "Error: Expected 'false' to equal 'true'",
                        "    at assert (base/tests.webpack.js?76caf3aaf86fe9c314c9d6cab6800f8389f76f06:108:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?76caf3aaf86fe9c314c9d6cab6800f8389f76f06:242:30)",
                        "    at Context.<anonymous> (base/tests.webpack.js?76caf3aaf86fe9c314c9d6cab6800f8389f76f06:42846:75)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1512499445975,
                    "endTime": 1512499446137,
                    "weight": 1
                }
            ]
        },
        {
            "browser": {
                "id": "68904710",
                "fullName": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10.12; rv:57.0) Gecko/20100101 Firefox/57.0",
                "name": "Firefox 57.0.0 (Mac OS X 10.12.0)",
                "state": 5,
                "lastResult": {
                    "success": 0,
                    "failed": 0,
                    "skipped": 0,
                    "total": 0,
                    "totalTime": 10009,
                    "netTime": 0,
                    "error": false,
                    "disconnected": true
                },
                "disconnectsCount": 1
            },
            "errors": [
                "Disconnected, because no message in 10000 ms.\n"
            ],
            "results": []
        }
    ],
    "library": {
        "name": "angular",
        "version": "1.6.7"
    }
}