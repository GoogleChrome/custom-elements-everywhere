{
    "summary": {
        "success": 24,
        "failed": 6,
        "skipped": 0,
        "error": false,
        "disconnected": false,
        "exitCode": 1,
        "score": 91,
        "basicSupport": {
            "total": 16,
            "failed": 0,
            "passed": 16
        },
        "advancedSupport": {
            "total": 14,
            "failed": 6,
            "passed": 8
        }
    },
    "browsers": [
        {
            "browser": {
                "id": "56464465",
                "fullName": "FirefoxHeadless",
                "name": "FirefoxHeadless",
                "state": "DISCONNECTED",
                "lastResult": {
                    "startTime": 1642696193456,
                    "total": 15,
                    "success": 12,
                    "failed": 3,
                    "skipped": 0,
                    "totalTime": 132,
                    "netTime": 50,
                    "error": false,
                    "disconnected": false
                },
                "disconnectsCount": 0,
                "noActivityTimeout": 30000,
                "disconnectDelay": 2000
            },
            "errors": [],
            "results": [
                {
                    "id": "",
                    "description": "can display a Custom Element with no children",
                    "suite": [
                        "basic support",
                        "no children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 9,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1642696193451,
                    "endTime": 1642696193461,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in a Shadow Root",
                    "suite": [
                        "basic support",
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 5,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1642696193464,
                    "endTime": 1642696193469,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in a Shadow Root and pass in Light DOM children",
                    "suite": [
                        "basic support",
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 6,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1642696193470,
                    "endTime": 1642696193477,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in the Shadow DOM and handle hiding and showing the element",
                    "suite": [
                        "basic support",
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 10,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1642696193484,
                    "endTime": 1642696193494,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "will pass boolean data as either an attribute or a property",
                    "suite": [
                        "basic support",
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 1,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1642696193495,
                    "endTime": 1642696193505,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "will pass numeric data as either an attribute or a property",
                    "suite": [
                        "basic support",
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 0,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1642696193506,
                    "endTime": 1642696193515,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "will pass string data as either an attribute or a property",
                    "suite": [
                        "basic support",
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 0,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1642696193515,
                    "endTime": 1642696193516,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "can imperatively listen to a DOM event dispatched by a Custom Element",
                    "suite": [
                        "basic support",
                        "events"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 4,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1642696193517,
                    "endTime": 1642696193521,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "will pass array data as a property",
                    "suite": [
                        "advanced support",
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 0,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1642696193528,
                    "endTime": 1642696193530,
                    "weight": 2
                },
                {
                    "id": "",
                    "description": "will pass object data as a property",
                    "suite": [
                        "advanced support",
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 1,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1642696193531,
                    "endTime": 1642696193535,
                    "weight": 2
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a lowercase DOM event dispatched by a Custom Element",
                    "suite": [
                        "advanced support",
                        "events"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 8,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1642696193535,
                    "endTime": 1642696193544,
                    "weight": 2
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a kebab-case DOM event dispatched by a Custom Element",
                    "suite": [
                        "advanced support",
                        "events"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 1,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1642696193551,
                    "endTime": 1642696193552,
                    "weight": 1
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a camelCase DOM event dispatched by a Custom Element",
                    "suite": [
                        "advanced support",
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 3,
                    "log": [
                        "expected 'false' to deeply equal 'true'",
                        "AssertionError@webpack:///./node_modules/assertion-error/index.js?:76:13",
                        "module.exports/Assertion.prototype.assert@webpack:///./node_modules/chai/lib/chai/assertion.js?:154:13",
                        "assertEql@webpack:///./node_modules/chai/lib/chai/core/assertions.js?:1024:10",
                        "methodWrapper@webpack:///./node_modules/chai/lib/chai/utils/addMethod.js?:59:25",
                        "@webpack:///./src/advanced-tests.js?:99:49",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "AssertionError",
                            "message": "expected 'false' to deeply equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1642696193556,
                    "endTime": 1642696193559,
                    "weight": 1
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a CAPScase DOM event dispatched by a Custom Element",
                    "suite": [
                        "advanced support",
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 1,
                    "log": [
                        "expected 'false' to deeply equal 'true'",
                        "AssertionError@webpack:///./node_modules/assertion-error/index.js?:76:13",
                        "module.exports/Assertion.prototype.assert@webpack:///./node_modules/chai/lib/chai/assertion.js?:154:13",
                        "assertEql@webpack:///./node_modules/chai/lib/chai/core/assertions.js?:1024:10",
                        "methodWrapper@webpack:///./node_modules/chai/lib/chai/utils/addMethod.js?:59:25",
                        "@webpack:///./src/advanced-tests.js?:111:49",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "AssertionError",
                            "message": "expected 'false' to deeply equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1642696193568,
                    "endTime": 1642696193569,
                    "weight": 1
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a PascalCase DOM event dispatched by a Custom Element",
                    "suite": [
                        "advanced support",
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 1,
                    "log": [
                        "expected 'false' to deeply equal 'true'",
                        "AssertionError@webpack:///./node_modules/assertion-error/index.js?:76:13",
                        "module.exports/Assertion.prototype.assert@webpack:///./node_modules/chai/lib/chai/assertion.js?:154:13",
                        "assertEql@webpack:///./node_modules/chai/lib/chai/core/assertions.js?:1024:10",
                        "methodWrapper@webpack:///./node_modules/chai/lib/chai/utils/addMethod.js?:59:25",
                        "@webpack:///./src/advanced-tests.js?:123:49",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "AssertionError",
                            "message": "expected 'false' to deeply equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1642696193575,
                    "endTime": 1642696193576,
                    "weight": 1
                }
            ]
        },
        {
            "browser": {
                "id": "74166748",
                "fullName": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) HeadlessChrome/97.0.4692.71 Safari/537.36",
                "name": "Chrome Headless 97.0.4692.71 (Linux x86_64)",
                "state": "DISCONNECTED",
                "lastResult": {
                    "startTime": 1642696191204,
                    "total": 15,
                    "success": 12,
                    "failed": 3,
                    "skipped": 0,
                    "totalTime": 93,
                    "netTime": 34,
                    "error": false,
                    "disconnected": false
                },
                "disconnectsCount": 0,
                "noActivityTimeout": 30000,
                "disconnectDelay": 2000
            },
            "errors": [],
            "results": [
                {
                    "id": "",
                    "description": "can display a Custom Element with no children",
                    "suite": [
                        "basic support",
                        "no children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 8,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1642696191209,
                    "endTime": 1642696191218,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in a Shadow Root",
                    "suite": [
                        "basic support",
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 2,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1642696191219,
                    "endTime": 1642696191221,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in a Shadow Root and pass in Light DOM children",
                    "suite": [
                        "basic support",
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 6,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1642696191221,
                    "endTime": 1642696191227,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in the Shadow DOM and handle hiding and showing the element",
                    "suite": [
                        "basic support",
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 5,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1642696191235,
                    "endTime": 1642696191240,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "will pass boolean data as either an attribute or a property",
                    "suite": [
                        "basic support",
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 0,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1642696191243,
                    "endTime": 1642696191244,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "will pass numeric data as either an attribute or a property",
                    "suite": [
                        "basic support",
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 0,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1642696191245,
                    "endTime": 1642696191246,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "will pass string data as either an attribute or a property",
                    "suite": [
                        "basic support",
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 0,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1642696191246,
                    "endTime": 1642696191247,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "can imperatively listen to a DOM event dispatched by a Custom Element",
                    "suite": [
                        "basic support",
                        "events"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 4,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1642696191247,
                    "endTime": 1642696191251,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "will pass array data as a property",
                    "suite": [
                        "advanced support",
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 0,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1642696191253,
                    "endTime": 1642696191255,
                    "weight": 2
                },
                {
                    "id": "",
                    "description": "will pass object data as a property",
                    "suite": [
                        "advanced support",
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 1,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1642696191256,
                    "endTime": 1642696191257,
                    "weight": 2
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a lowercase DOM event dispatched by a Custom Element",
                    "suite": [
                        "advanced support",
                        "events"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 3,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1642696191257,
                    "endTime": 1642696191261,
                    "weight": 2
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a kebab-case DOM event dispatched by a Custom Element",
                    "suite": [
                        "advanced support",
                        "events"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 1,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1642696191266,
                    "endTime": 1642696191267,
                    "weight": 1
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a camelCase DOM event dispatched by a Custom Element",
                    "suite": [
                        "advanced support",
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 2,
                    "log": [
                        "AssertionError: expected 'false' to deeply equal 'true'",
                        "    at Context.eval (webpack:///./src/advanced-tests.js?:99:49)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "AssertionError",
                            "message": "expected 'false' to deeply equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1642696191272,
                    "endTime": 1642696191278,
                    "weight": 1
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a CAPScase DOM event dispatched by a Custom Element",
                    "suite": [
                        "advanced support",
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 1,
                    "log": [
                        "AssertionError: expected 'false' to deeply equal 'true'",
                        "    at Context.eval (webpack:///./src/advanced-tests.js?:111:49)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "AssertionError",
                            "message": "expected 'false' to deeply equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1642696191284,
                    "endTime": 1642696191286,
                    "weight": 1
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a PascalCase DOM event dispatched by a Custom Element",
                    "suite": [
                        "advanced support",
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 1,
                    "log": [
                        "AssertionError: expected 'false' to deeply equal 'true'",
                        "    at Context.eval (webpack:///./src/advanced-tests.js?:123:49)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "AssertionError",
                            "message": "expected 'false' to deeply equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1642696191291,
                    "endTime": 1642696191292,
                    "weight": 1
                }
            ]
        }
    ],
    "library": {
        "name": "@polymer/polymer",
        "version": "3.4.1"
    }
}